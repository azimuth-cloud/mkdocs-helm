apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mkdocs-helm.fullname" . }}
  labels:
    {{- include "mkdocs-helm.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mkdocs-helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mkdocs-helm.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mkdocs-helm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: clone
          image: alpine/git
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
          - clone
          - {{ .Values.repo | required "A target git repo containing mkdocs config must be supplied" }}
          - /tmp/checkout
          volumeMounts:
            - mountPath: /tmp/checkout
              name: repo-checkout
          {{- if .Values.sshPrivateKey }}
            - mountPath: /root/.ssh
              name: repo-ssh-key
          env:
            - name: GIT_SSH_COMMAND
              value: "ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i /root/.ssh/ssh-privatekey"
          {{- end }}
        - name: mkdocs
          image: squidfunk/mkdocs-material
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          - sh
          - -c
          - {{ join " " .Values.plugins | printf "pip install %s && mkdocs build -d /build" }}
          volumeMounts:
            - mountPath: /docs
              name: repo-checkout
            - mountPath: /build
              name: static-docs
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /usr/share/nginx/html
              name: static-docs
      volumes:
        - name: repo-checkout
          emptyDir: {}
        - name: static-docs
          emptyDir: {}
        {{- if .Values.sshPrivateKey }}
        - name: repo-ssh-key
          secret:
            secretName: {{ include "mkdocs-helm.fullname" . }}-ssh
            defaultMode: 0600
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
